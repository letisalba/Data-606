not_active_n <- 4022
# active
active_mean <- 68.4
active_sd <- 16.5
active_n <- 8342
z <- 1.96
# confidence interval for not active
upper_not_active <- not_active_mean + z * (not_active_sd / sqrt(not_active_n))
lower_not_active <- not_active_mean - z * (not_active_sd / sqrt(not_active_n))
# confidence interval for active
upper_active <- active_mean + z * (active_sd / sqrt(active_n))
lower_active <- active_mean - z * (active_sd / sqrt(active_n))
# not Active
not_active_mean <- 66.7
not_active_sd <- 17.6
not_active_n <- 4022
# active
active_mean <- 68.4
active_sd <- 16.5
active_n <- 8342
z <- 1.96
# confidence interval for not active
upper_not_active <- not_active_mean + z * (not_active_sd / sqrt(not_active_n))
upper_not_active
lower_not_active <- not_active_mean - z * (not_active_sd / sqrt(not_active_n))
lower_not_active
# confidence interval for active
upper_active <- active_mean + z * (active_sd / sqrt(active_n))
upper_active
lower_active <- active_mean - z * (active_sd / sqrt(active_n))
lower_active
height_table <- as.data.frame(table(yrbss$height))
height_freq <- sum(table_height$Freq)
# mean, standard deviation and sample size
height_mean <- mean(yrbss$height, na.rm = TRUE)
height_sd <- sd(yrbss$height, na.rm = TRUE)
height_n <- yrbss %>%
summarise(freq = table(height)) %>%
summarise(n = sum(freq, na.rm = TRUE))
# confidence interval for height
upper_height<- height_mean + z * (height_sd / sqrt(height_n))
upper_height
lower_height <- height_mean - z * (height_sd / sqrt(height_n))
lower_height
# set z value to 1.65 for 90% confidence interval
z_90 <- 1.65
#confidence interval for height
upper_height<- height_mean + z_90 * (height_sd / sqrt(height_n))
upper_height
lower_height <- height_mean - z_90 * (height_sd / sqrt(height_n))
lower_height
?abs
# set z value to 1.65 for 90% confidence interval
z_90 <- 1.65
#confidence interval for height
upper_height_90 <- height_mean + z_90 * (height_sd / sqrt(height_n))
upper_height_90
lower_height_90 <- height_mean - z_90 * (height_sd / sqrt(height_n))
lower_height_90
# difference between both confidence intervals
range_95 <- (upper_height - lower_height)
range_95
range_90 <- (upper_height_90 - lower_height_90)
range_90
height_table <- as.data.frame(table(yrbss$height))
height_freq <- sum(table_height$Freq)
# mean, standard deviation and sample size
height_mean <- mean(yrbss$height, na.rm = TRUE)
height_sd <- sd(yrbss$height, na.rm = TRUE)
height_n <- yrbss %>%
summarise(freq = table(height)) %>%
summarise(n = sum(freq, na.rm = TRUE))
z <- 1.96
# confidence interval for height
upper_height<- height_mean + z * (height_sd / sqrt(height_n))
upper_height
lower_height <- height_mean - z * (height_sd / sqrt(height_n))
lower_height
# set z value to 1.65 for 90% confidence interval
z_90 <- 1.65
#confidence interval for height
upper_height_90 <- height_mean + z_90 * (height_sd / sqrt(height_n))
upper_height_90
lower_height_90 <- height_mean - z_90 * (height_sd / sqrt(height_n))
lower_height_90
# difference between both confidence intervals
range_95 <- (upper_height - lower_height)
range_95
range_90 <- (upper_height_90 - lower_height_90)
range_90
# difference between both confidence intervals
range_95 <- (upper_height - lower_height)
range_95
range_90 <- (upper_height_90 - lower_height_90)
range_90
diff_range <- range_90 - range_95
diff_range
# difference between both confidence intervals
range_95 <- (upper_height - lower_height)
range_95
range_90 <- (upper_height_90 - lower_height_90)
range_90
diff_range <- range_95 - range_90
diff_range
obs_diff_hgt <- yrbss %>%
specify(height ~ physical_3plus) %>%
calculate(stat = "diff in means", order = c("yes", "no"))
set.seed(87)
null_dist_hgt <- yrbss %>%
specify(height ~ physical_3plus) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("yes", "no"))
visualize(null_dist_hgt) +
shade_p_value(obs_stat = obs_diff_hgt, direction = "two_sided")
null_dist_hgt %>%
get_p_value(obs_stat = obs_diff_hgt, direction = "two_sided")
height_table <- as.data.frame(table(yrbss$height))
height_freq <- sum(table_height$Freq)
# mean, standard deviation and sample size
height_mean <- mean(yrbss$height, na.rm = TRUE)
height_sd <- sd(yrbss$height, na.rm = TRUE)
height_n <- yrbss %>%
summarise(freq = table(height)) %>%
summarise(n = sum(freq, na.rm = TRUE))
z <- 1.96
# confidence interval for height
upper_height<- height_mean + z * (height_sd / sqrt(height_n))
upper_height
lower_height <- height_mean - z * (height_sd / sqrt(height_n))
lower_height
height_table <- as.data.frame(table(yrbss$height))
height_freq <- sum(table_height$Freq)
# mean, standard deviation and sample size
height_mean <- mean(yrbss$height, na.rm = TRUE)
height_mean
height_sd <- sd(yrbss$height, na.rm = TRUE)
height_sd
height_n <- yrbss %>%
summarise(freq = table(height)) %>%
summarise(n = sum(freq, na.rm = TRUE))
height_n
z_height <- 1.96
# confidence interval for height
upper_height<- height_mean + z_height * (height_sd / sqrt(height_n))
upper_height
lower_height <- height_mean - z_height * (height_sd / sqrt(height_n))
lower_height
# not Active
height_not_active_mean <- 1.665
height_not_active_sd <- 0.1029
height_not_active_n <- 4022
# active
height_active_mean <- 1.7032
height_active_sd <- 0.1033
height_active_n <- 8342
z_height <- 1.96
# confidence interval for not active
height_upper_not_active <- height_not_active_mean + z * (height_not_active_sd / sqrt(height_not_active_n))
height_upper_not_active
height_lower_not_active <- height_not_active_mean - z * (height_not_active_sd / sqrt(height_not_active_n))
height_lower_not_active
# confidence interval for active
height_upper_active <- height_active_mean + z_height * (height_active_sd / sqrt(height_active_n))
height_upper_active
height_lower_active <- height_active_mean - z_height * (height_active_sd / sqrt(height_active_n))
height_lower_active
null_dist_hgt %>%
get_p_value(obs_stat = obs_diff_hgt, direction = "two_sided")
yrbss %>%
group_by(hours_tv_per_school_day)%>%
summarise(n())
View(yrbss)
yrbss <- yrbss %>%
mutate(sleep_more = ifelse(yrbss$school_night_hours_sleep > 6, "yes", "no"))
height_more <- yrbss %>%
select(height, sleep_more) %>%
filter(sleep_more == "yes") %>%
na.omit()
height_less <- yrbss %>%
select(height, sleep_more) %>%
filter(sleep_more == "no") %>%
na.omit()
boxplot(height_more$height, height_less$height,
names = c("more sleep", "less sleep"))
yrbss <- yrbss %>%
mutate(sleep_less = ifelse(yrbss$school_night_hours_sleep < 6, "yes", "no"))
height_less <- yrbss %>%
select(height, sleep_less) %>%
filter(sleep_less == "no") %>%
na.omit()
height_more <- yrbss %>%
select(height, sleep_less) %>%
filter(sleep_less == "yes") %>%
na.omit()
boxplot(height_less$height, height_more$height,
names = c("less sleep", "more sleep"))
# less sleep
less_sleep_mean <- mean(height_less$height)
less_sleep_mean
less_sleep_sd <- sd(height_less$height)
less_sleep_sd
max <- max(height_less$height)
max
# more sleep
more_sleep_mean <- mean(height_more$height)
more_sleep_mean
more_sleep_sd <- sd(height_more$height)
more_sleep_sd
max_2 <- max(height_more$height)
max_2
# difference
diff_mean <- more_sleep_mean - less_sleep_mean
diff_mean
diff_sd <- sqrt(((more_sleep_mean^2) / nrow(height_more)) + ((less_sleep_mean^2) / nrow(height_less)))
diff_sd
sleep_df <- 2492-1
t_sleep <- qt(.05/2, sleep_df, lower.tail = FALSE)
# confidence interval
upper_sleep<- diff_mean + t_sleep * diff_sd
upper_sleep
lower_sleep<- diff_mean - t_sleep * diff_sd
lower_sleep
# p-value
p_value_sleep <- 2 * pt(t_sleep, sleep_df, lower.tail = FALSE)
p_value_sleep
knitr::opts_chunk$set(echo = TRUE)
# sample mean
n <- 25
x1 <- 65
x2 <- 77
smean <- (x2 + x1) / 2
smean
# margin of error
n <- 25
x1 <- 65
x2 <- 77
me <- (x2 - x1) / 2
me
#sample standard deviation
df <- 25 -1
t <-  1.71
se <- (77 - 71) / 1.71
sample_sd <- se * 1.71
sample_sd
#sample standard deviation
df <- 25 -1
df
t <-  1.71
se <- (77 - 71) / 1.71
se
sample_sd <- se * sqrt(n)
sample_sd
sd <- 250
me <- 25
z_90 <- 1.65
sample_size <- ((250 * 1.65) / 25)^2
sample_size
sd <- 250
me <- 25
z_90 <- 1.65
# sample size
n <- ((sd * z_90) / me)^2
n
sd <- 250
me <- 25
z_99 <- 2.58
# sample size
n <- ((sd * z_99) / me)^2
n
sd <- 250
me <- 25
z_99 <- 2.58
# sample size
n <- ((sd * z_99) / me)^2
n
diff_sd <- 8.887
diff_mu <- -0.545
n <- 200
# standard error
diff_se <- diff_sd / sqrt(n)
diff_se
# T stat
t_value <- (diff_mu - 0) / diff_se
t_value
df <- n - 1
df
p_value <-  pt(t_value, df)
p_value
diff_sd <- 8.887
diff_mu <- -0.545
n <- 200
# standard error
diff_se <- diff_sd / sqrt(n)
diff_se
# T stat
t_value <- (diff_mu - 0) / diff_se
t_value
df <- n - 1
p_value <-  pt(t_value, df)
p_value
diff_sd <- 8.887
diff_mu <- -0.545
n <- 200
# standard error
diff_se <- diff_sd / sqrt(n)
diff_se
# T stat
t_value <- (diff_mu - 0) / diff_se
t_value
df <- n - 1
p_value <-  pt(t_value, df, lower.tail = TRUE)
p_value
n <- 26
# Automatic
mean_auto <- 22.92
sd_auto <- 5.29
# Manual
mean_man <- 27.88
sd_man <- 5.01
# difference in sample means
mean_diff <- mean_auto - mean_man
mean_diff
# standard deviation
se_diff <- ((sd_auto^2 / n) + (sd_man^2 / n))
se_diff
# T-Value
t_value <- (mean_diff - 0) / se_diff
df <- n - 1
# P-Value
p_value <- pt(t_value, df, lower.tail = TRUE)
p_value
z_80 <- 1.28
sd <- 2.2
me <- 0.5
n_4 <- ((sd * z_80) / me)^2
n_4
knitr::opts_chunk$set(echo = TRUE)
library(DATA606)
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd
n <- c(121, 546, 97, 253, 155)
n
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
n <- c(121, 546, 97, 253, 155)
sum(mean)
sum(sd)
sum(n)
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sum(mean)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sum(sd)
n <- c(121, 546, 97, 253, 155)
sum(n)
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
# degrees of freedom
df <- n_sum - 1
dfresidual <- n_sum - mean_sum
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
# degrees of freedom
df <- n_sum - 1
dfresidual <- n_sum - mean_sum
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
mean_sum
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
sd_sum
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
n_sum
# degrees of freedom
df <- n_sum - 1
df
dfresidual <- n_sum - mean_sum
dfresidual
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
mean_sum
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
sd_sum
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
n_sum
# degrees of freedom
df <- n_sum - 1
df
dfresidual <- n_sum - mean_sum
dfresidual
# Using the qf function on the Pr(>F) to get the F-statistic:
Prf <- 0.0682
f_stat <- qf( 1 - Prf, df , dfresidual)
# F-statistic = MSG/MSE
MSG <- 501.54
MSE <- MSG / f_stat
# MSG = 1 / df * SSG
SSG <- df * MSG
SSE <- 267382
# SST = SSG + SSE, and df_Total = df + dfresidual
SST <- SSG + SSE
dft <- df + dfresidual
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
mean_sum
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
sd_sum
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
n_sum
# degrees of freedom
df <- n_sum - 1
df
dfresidual <- n_sum - mean_sum
dfresidual
# Using the qf function on the Pr(>F) to get the F-statistic:
Prf <- 0.0682
f_stat <- qf( 1 - Prf, df , dfresidual)
# F-statistic = MSG/MSE
MSG <- 501.54
MSE <- MSG / f_stat
# MSG = 1 / df * SSG
SSG <- df * MSG
SSE <- 267382
# SST = SSG + SSE, and df_Total = df + dfresidual
SST <- SSG + SSE
dft <- df + dfresidual
dft
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
mean_sum
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
sd_sum
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
n_sum
# degrees of freedom
df <- n_sum - 1
df
dfresidual <- n_sum - mean_sum
dfresidual
# Using the qf function on the Pr(>F) to get the F-statistic:
Prf <- 0.0682
f_stat <- qf( 1 - Prf, df , dfresidual)
f_stat
# F-statistic = MSG/MSE
MSG <- 501.54
MSE <- MSG / f_stat
MSE
# MSG = 1 / df * SSG
SSG <- df * MSG
SSG
SSE <- 267382
# SST = SSG + SSE, and df_Total = df + dfresidual
SST <- SSG + SSE
SST
dft <- df + dfresidual
dft
# Find sum of mean, standard deviation and sample size
mean <- c(38.67, 39.6, 41.39, 42.55, 40.85)
mean_sum <- sum(mean)
mean_sum
length(mean)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
sd_sum <- sum(sd)
sd_sum
n <- c(121, 546, 97, 253, 155)
n_sum <- sum(n)
n_sum
# degrees of freedom
df <- n_sum - 1
df
dfresidual <- n_sum - mean_sum
dfresidual
# Using the qf function on the Pr(>F) to get the F-statistic:
Prf <- 0.0682
f_stat <- qf( 1 - Prf, df , dfresidual)
f_stat
# F-statistic = MSG/MSE
MSG <- 501.54
MSE <- MSG / f_stat
MSE
# MSG = 1 / df * SSG
SSG <- df * MSG
SSG
SSE <- 267382
# SST = SSG + SSE, and df_Total = df + dfresidual
SST <- SSG + SSE
SST
dft <- df + dfresidual
dft
